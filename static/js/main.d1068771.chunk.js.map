{"version":3,"sources":["api/api.js","serviceWorker.js","redux/appReducer.js","redux/redux_store.js","components/Sidebar/FriendsOnline/FriendsOnlineItem/FriendsOnlineItem.jsx","components/Sidebar/FriendsOnline/FriendsOnline.jsx","components/Sidebar/Sidebar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","index.js","redux/authReducer.js","components/Sidebar/FriendsOnline/FriendsOnlineItem/FriendsOnlineItem.module.css","components/Preloader/Preloader.jsx","components/Sidebar/FriendsOnline/FriendsOnline.module.css","components/Header/Header.module.css","components/Sidebar/Sidebar.module.css","redux/profileReducer.js","redux/dialogsReducer.js","redux/usersReducer.js","assets/images/preloader.svg","components/Preloader/Preloader.module.css","components/Header/logo.svg"],"names":["instance","axios","withCredentials","headers","baseURL","usersAPI","getUsers","pageNumber","usersOnPage","get","then","response","data","setFollow","userId","post","setUnfollow","delete","profileAPI","getUserData","getUserStatus","updateUserStatus","status","put","authAPI","getUserAvatar","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","initialState","isInitialized","appReducer","state","action","type","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","findUsers","usersReducer","auth","authReducer","form","formReducer","app","store","createStore","applyMiddleware","thunk","FriendsOnlineItem","className","style","item","avatar","src","alt","name","FriendsOnline","title","wrapper","Sidebar","s","sidebar","to","activeClassName","active","Header","props","header","logo","loginBlock","isAuth","onClick","undefined","HeaderContainer","this","React","Component","connect","imgUrl","DialogsContainer","lazy","UsersContainer","ProfileContainer","LoginContainer","Settings","Music","News","App","initApp","fallback","Preloader","path","component","compose","dispatch","getAuthUserData","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","SET_AUTH_USER_DATA","setAuthUserData","boolean","a","resultCode","id","message","messages","stopSubmit","_error","alert","module","exports","styles","preloaderWrapper","preloader","inititalState","posts","postText","likeCount","profileData","userStatus","stateCopy","unshift","text","profile","newPostActionCreator","setUserProfile","setUserStatus","updateUserStatusRequest","dialogs","userName","sendMessageActionCreator","users","totalUsersCount","currentPage","isLoading","followingInProgress","FOLLOW","map","u","followed","UNFOLLOW","SET_USERS","CHANGE_PAGE","SET_TOTAL_USER_COUNT","count","SET_IS_LOADING","SET_FOLLOWING_IN_PROGRESS","filter","follow","unfollow","setUsers","changePage","setTotalUsersCount","setIsLoading","setFollowingInProgress","items","totalCount","setToggleFollow","method","actionCreator","setFollowToUser","setUnfollowToUser"],"mappings":"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","file":"static/js/main.d1068771.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'ba807922-ecf0-4dd8-8965-d3ef79fe8b9a'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers: (pageNumber = 1, usersOnPage = 10) => {\r\n        return instance\r\n            .get(`users?page=${pageNumber}&count=${usersOnPage}`, {\r\n                withCredentials: true\r\n            })\r\n            .then(response => response.data)\r\n    },\r\n    setFollow: (userId) => {\r\n        return instance.post('follow/' + userId).then(response => response.data)\r\n    },\r\n    setUnfollow: (userId) => {\r\n        return instance.delete('follow/' + userId).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getUserData: (userId) => {\r\n        return instance.get('profile/' + userId).then(response => response.data)\r\n    },\r\n    getUserStatus : (userId) => {\r\n        return instance.get('profile/status/' + userId).then(response => {\r\n            return response.data;\r\n        })\r\n    },    \r\n    updateUserStatus : (status) => {\r\n       \r\n        return instance.put('profile/status', {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getUserData: () => {\r\n        return instance.get('auth/me').then(response => response.data)\r\n    },\r\n    getUserAvatar : (userId)=> {\r\n        return instance.get('profile/'+ userId).then(response => response.data)\r\n    },\r\n    login : (email, password, rememberMe) => {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout : () => {\r\n        return instance.delete('auth/login')\r\n    } \r\n\r\n}\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nimport { getAuthUserData } from './authReducer'\r\n\r\nconst INIT_SUCCESS = 'INIT_SUCCESS';\r\nlet initialState = {\r\n    isInitialized: false\r\n}\r\n\r\nlet appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INIT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isInitialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initSuccess = () => ({ type: INIT_SUCCESS })\r\n\r\nexport const initApp = () => (dispatch) => {\r\n    dispatch(getAuthUserData())\r\n        .then(() => {\r\n            dispatch(initSuccess())\r\n        })\r\n}\r\n\r\nexport default appReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage : profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    findUsers : usersReducer,\r\n    auth : authReducer,\r\n    form: formReducer,\r\n    app : appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport style from './FriendsOnlineItem.module.css';\r\n\r\nconst FriendsOnlineItem = () => {\r\n    return (\r\n        <div className={style.item}>\r\n            <div className={style.avatar}>\r\n                <img src=\"https://klike.net/uploads/posts/2019-03/1551512886_9.jpg\" alt=\"avatar\"/>\r\n            </div>\r\n            <div className={style.name}>Ivan Petrov</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsOnlineItem;","import React from 'react';\r\nimport style from './FriendsOnline.module.css';\r\nimport FriendsOnlineItem from './FriendsOnlineItem/FriendsOnlineItem';\r\n\r\nconst FriendsOnline = () => {\r\n    return (\r\n        <div>\r\n            <h4 className={style.title}>Друзья онлайн</h4>\r\n            <div  className={style.wrapper}>\r\n                <FriendsOnlineItem/>\r\n                <FriendsOnlineItem/>\r\n                <FriendsOnlineItem/>\r\n                <FriendsOnlineItem/>\r\n                <FriendsOnlineItem/>\r\n                <FriendsOnlineItem/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsOnline;","import React from 'react';\r\nimport s from './Sidebar.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport FriendsOnline from './FriendsOnline/FriendsOnline';\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <aside className={s.sidebar}>\r\n            <nav>\r\n                <ul>\r\n                    <li className={s.item}>\r\n                        <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n                    </li>\r\n                    <li className={s.item}>\r\n                        <NavLink to=\"/messages\" activeClassName={s.active}>Messages</NavLink>\r\n                    </li>\r\n                    <li className={s.item}>\r\n                        <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n                    </li>\r\n                    <li className={s.item}>\r\n                        <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n                    </li>\r\n                    <li className={s.item}>\r\n                        <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\r\n                    </li>\r\n                    <li className={s.item}>\r\n                        <NavLink to=\"/find_users\" activeClassName={s.active}>Find Users</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <FriendsOnline/>\r\n                    </li>\r\n                \r\n                </ul>\r\n            </nav>\r\n        </aside>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport logo from './logo.svg';\r\nimport { NavLink } from 'react-router-dom';\r\n// import defaultAvatar from '../../assets/images/default_ava.png'\r\n\r\nconst Header = (props) => {\r\n    \r\n    const onLogout = ()=> {\r\n        props.logout();\r\n    }\r\n    \r\n    return (\r\n        <header className={s.header}>\r\n            <img src={logo} alt=\"logo\" />\r\n            <div className={s.loginBlock}>\r\n                { props.isAuth ? props.login : <NavLink to='/profile'>Login</NavLink>}\r\n                { props.isAuth ? <button onClick={onLogout}>Log out</button> : undefined }\r\n            </div>\r\n        </header>\r\n        \r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from './../../redux/authReducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth : state.auth.isAuth,\r\n        imgUrl : state.auth.imgUrl,\r\n        login : state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout })(HeaderContainer);","import React, { Suspense, lazy } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport Preloader from './components/Preloader/Preloader';\nimport { compose } from 'redux';\nimport {initApp} from './redux/appReducer';\nimport { Route } from \"react-router-dom\";\n\nimport Sidebar from './components/Sidebar/Sidebar';\n\nimport HeaderContainer from './components/Header/HeaderContainer';\n\n// import DialogsContainer from './components/Messages/DialogsContainer';\n// import UsersContainer from './components/Users/UsersContainer';\n// import ProfileContainer from './components/Profile/ProfileContainer';\n// import LoginContainer from './components/Login/LoginContainer';\n// import  from './components/Settings/Settings';\n// import  from './components/Music/Music';\n// import  from './components/News/News';\n\nconst DialogsContainer = lazy(() => import('./components/Messages/DialogsContainer'));\nconst UsersContainer = lazy(() => import('./components/Users/UsersContainer'));\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\nconst LoginContainer = lazy(() => import('./components/Login/LoginContainer'));\nconst Settings = lazy(() => import('./components/Settings/Settings'));\nconst Music = lazy(() => import('./components/Music/Music'));\nconst News = lazy(() => import('./components/News/News'));\n\n\n\n\nclass App extends React.Component {\n\n\tcomponentDidMount() {\n\t\tthis.props.initApp()\n\t}\n\n\trender() {\n\n\t\tif(!this.props.isInitialized) {\n\t\t\treturn <Preloader/>\n\t\t}\n\n\t\treturn (\n\t\t\t<div className='app-wrapper'>\n\t\t\t\t<HeaderContainer />\n\t\t\t\t<Sidebar />\n\t\t\t\t<div className='content-wrapper'>\n\t\t\t\t<Suspense fallback={<Preloader/>}>\n\t\t\t\t\t<Route path='/profile/:userId?' component={ProfileContainer} />\n\t\t\t\t\t<Route path='/messages' component={DialogsContainer} />\n\t\t\t\t\t<Route path='/news' component={News} />\n\t\t\t\t\t<Route path='/music' component={Music} />\n\t\t\t\t\t<Route path='/settings' component={Settings} />\n\t\t\t\t\t<Route path='/find_users' component={UsersContainer} />\n\t\t\t\t\t<Route path='/login' component={LoginContainer} />\n\t\t\t\t</Suspense>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisInitialized : state.app.isInitialized\n\t}\n}\n\nexport default compose(\n\tconnect(mapStateToProps, {initApp}))(App);\n","\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux_store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n\n\n\n\n\n","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    imgUrl: ''\r\n}\r\n\r\n\r\nlet authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\n\r\n\r\nexport const setAuthUserData = (email, userId, login, boolean) => ({ type: SET_AUTH_USER_DATA, data: { email, userId, login, isAuth: boolean } });\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let data = await authAPI.getUserData()\r\n    if (data.resultCode === 0) {\r\n        let { email, id, login } = data.data;\r\n        dispatch(setAuthUserData(email, id, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages[0] ? response.data.messages[0] : 'Some Error';\r\n        dispatch(stopSubmit('loginForm', { _error: message }))\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        } else {\r\n            alert('Ошибка во время выхода из соцсети. Вы не вышли.')\r\n        }\r\n}\r\n\r\nexport default authReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsOnlineItem_item__Hq5mt\",\"avatar\":\"FriendsOnlineItem_avatar__1bSXY\",\"name\":\"FriendsOnlineItem_name__2JCA0\"};","import React from 'react';\r\nimport preloader from '../../assets/images/preloader.svg';\r\nimport styles from './Preloader.module.css'\r\n\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={styles.preloaderWrapper}>\r\n            <img src={preloader} alt='preloader'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FriendsOnline_wrapper__15H-D\",\"title\":\"FriendsOnline_title__3sfqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__LVxAN\",\"loginBlock\":\"Header_loginBlock__1-k1V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2Uzf1\",\"item\":\"Sidebar_item__1gLnv\",\"active\":\"Sidebar_active__1XkNZ\"};","import { profileAPI } from \"../api/api\";\r\n\r\nlet inititalState = {\r\n    posts: [\r\n        { id: 1, postText: 'Hi! How are you?', likeCount: '15' },\r\n        { id: 2, postText: 'Hello! This is my first post here.', likeCount: '8' }\r\n    ],\r\n    profileData: null,\r\n    userStatus: 'Enter your status'\r\n}\r\n\r\nconst profileReducer = (state = inititalState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'NEW-POST': {\r\n            let stateCopy = { ...state };\r\n            stateCopy.posts = [...state.posts]\r\n            stateCopy.posts.unshift({\r\n                id: 5,\r\n                postText: action.text,\r\n                likeCount: 0\r\n            })\r\n            return stateCopy;\r\n        }\r\n\r\n        case 'SET_USER_PROFILE': {\r\n            return { ...state, profileData: action.profile }\r\n        }\r\n        case 'SET_USER_STATUS': {\r\n            return { ...state, userStatus: action.status }\r\n        }\r\n        case 'UPDATE_USER_STATUS': {\r\n            return { ...state, userStatus: action.status }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default profileReducer;\r\n\r\nconst NEW_POST = 'NEW-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'SET_USER_STATUS';\r\nconst UPDATE_USER_STATUS = 'UPDATE_USER_STATUS';\r\n\r\nexport const newPostActionCreator = (text) => ({ type: NEW_POST, text });\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nexport const setUserStatus = (status) => ({ type: SET_USER_STATUS, status });\r\nexport const updateUserStatus = (status) => ({ type: UPDATE_USER_STATUS, status });\r\n\r\nexport const getUserData = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getUserData(userId);\r\n    dispatch(setUserProfile(data));\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getUserStatus(userId);\r\n    dispatch(setUserStatus(data));\r\n}\r\n\r\nexport const updateUserStatusRequest = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateUserStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n}\r\n\r\n","let inititalState = {\r\n    dialogs : [\r\n        { id : '1' , userName: 'Павел Кабацкий'},\r\n        { id : '2' , userName: 'Вероника Кабацкая'},\r\n        { id : '3' , userName: 'Роман Хеммелис'},\r\n        { id : '4' , userName: 'Иван Таиров'}\r\n    ],\r\n    messages : [\r\n        { id : '1' , text: 'Hello'},\r\n        { id : '1' , text: 'How are you?!'},\r\n        { id : '1' , text: 'I`m feeling good, bro, thanks!'},\r\n        { id : '1' , text: 'Yo!'},\r\n       \r\n    ],\r\n    \r\n}\r\nconst dialogsReducer = (state = inititalState, action) => {\r\n    switch (action.type) {\r\n        case 'SEND-MESSAGE': {\r\n            return {\r\n                ...state,\r\n                messages : [...state.messages, {\r\n                    id : '1' ,\r\n                    text: action.message\r\n                }],\r\n               \r\n            };  \r\n        }   \r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nexport const sendMessageActionCreator = (message) => ({type: SEND_MESSAGE, message});\r\nexport default dialogsReducer;","import { usersAPI } from '../api/api';\r\n\r\nlet inititalState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    usersOnPage : 10,\r\n    currentPage : 1,\r\n    isLoading : false,\r\n    followingInProgress : []\r\n}\r\n\r\nconst usersReducer = (state = inititalState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        }\r\n        \r\n        case SET_USERS : {\r\n            return {...state,users : action.users}\r\n        }\r\n        case CHANGE_PAGE : {\r\n            return {...state,currentPage : action.currentPage}\r\n        }\r\n        case SET_TOTAL_USER_COUNT : {\r\n            return {...state,totalUsersCount : action.count}\r\n        }\r\n        case SET_IS_LOADING : {\r\n            return {...state, isLoading : action.isLoading}\r\n        }\r\n        case SET_FOLLOWING_IN_PROGRESS : {\r\n            return {\r\n                ...state,\r\n                followingInProgress : action.isLoading\r\n                ? [...state.followingInProgress,action.userId]\r\n                : state.followingInProgress.filter( id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default usersReducer;\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst CHANGE_PAGE = 'CHANGE_PAGE';\r\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\r\nconst SET_IS_LOADING = 'SET_IS_LOADING';\r\nconst SET_FOLLOWING_IN_PROGRESS = 'SET_FOLLOWING_IN_PROGRESS';\r\n\r\nexport const follow = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollow = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const changePage = (currentPage) => ({ type: CHANGE_PAGE, currentPage});\r\nexport const setTotalUsersCount = (count) => ({ type: SET_TOTAL_USER_COUNT, count});\r\nexport const setIsLoading = (isLoading) => ({ type: SET_IS_LOADING, isLoading});\r\nexport const setFollowingInProgress = (isLoading, userId) => ({ type: SET_FOLLOWING_IN_PROGRESS, isLoading, userId});\r\n\r\nexport const getUsers = (currentPage, usersOnPage) => (dispatch) => {\r\n    dispatch(setIsLoading(true));\r\n    dispatch(changePage(currentPage));\r\n    usersAPI.getUsers(currentPage, usersOnPage)\r\n        .then(data => {\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n            dispatch(setIsLoading(false));\r\n        })\r\n}\r\n\r\nexport const setToggleFollow = async (dispatch,userId, method, actionCreator) => {\r\n    dispatch(setFollowingInProgress(true, userId));\r\n\r\n    let data = await usersAPI[method](userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId)) \r\n    }\r\n    dispatch(setFollowingInProgress(false,userId))\r\n}\r\n\r\nexport const setFollowToUser = (userId) => (dispatch) => {\r\n    setToggleFollow(dispatch, userId, 'setFollow', follow);\r\n}\r\nexport const setUnfollowToUser = (userId) => (dispatch) => {\r\n    setToggleFollow(dispatch, userId, 'setUnfollow', unfollow);\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.5061f2cb.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderWrapper\":\"Preloader_preloaderWrapper__1NLJo\"};","module.exports = __webpack_public_path__ + \"static/media/logo.f7bf251a.svg\";"],"sourceRoot":""}