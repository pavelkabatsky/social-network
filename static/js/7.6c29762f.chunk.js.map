{"version":3,"sources":["common/validation/validation.module.css","common/validation/formControls.jsx","common/validation/validation.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["module","exports","elementCreator","Element","input","meta","props","hasError","error","touched","className","styles","formControl","required","value","undefined","maxLength","max","length","Input","LoginForm","formError","onSubmit","handleSubmit","Field","placeholder","name","component","validate","type","Login","ReduxLoginForm","reduxForm","form","isAuth","to","formData","password","email","login","rememberMe","LoginContainer","this","React","Component","connect","state","auth"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,gCAAgC,MAAQ,0BAA0B,UAAY,gC,kHCEjGC,EAAiB,SAAAC,GAAO,OAAI,YAAgC,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASC,EAAY,gCAC9DC,EAAWF,EAAKG,OAASH,EAAKI,QACpC,OACI,yBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOH,MAAQ,KAClE,kBAACL,EAAD,iBAAcC,EAAWE,IACzB,6BACKC,EAAW,8BAAOF,EAAKG,OAAgB,Q,iCCPxD,oEAAO,IAAMK,EAAW,SAAAC,GAAK,OAAKA,GAA0B,kBAAVA,OAAqBC,EAAY,YACtEC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAC9BA,GAASA,EAAMI,OAASD,EAAxB,kBAAyCA,EAAzC,yBAAiEF,K,kKCyB/DI,EAAQjB,YAAe,SACvBkB,EAAY,SAACd,GAEf,OACI,oCACKA,EAAME,OAAS,yBAAKE,UAAWC,IAAOU,WAAvB,IAAoCf,EAAME,MAA1C,KAChB,0BAAMc,SAAUhB,EAAMiB,cAClB,kBAACC,EAAA,EAAD,CAAOC,YAAa,aAAcC,KAAM,QAASC,UAAWR,EAAOS,SAAU,CAACf,OAAa,6BAC3F,kBAACW,EAAA,EAAD,CAAOK,KAAK,WAAWJ,YAAa,gBAAiBC,KAAM,WAAYC,UAAWR,EAAOS,SAAU,CAACf,OAAa,6BACjH,kBAACW,EAAA,EAAD,CAAOK,KAAM,WAAYH,KAAM,aAAcC,UAAW,UAH5D,cAGkF,6BAC9E,4CAODG,EAvCD,SAACxB,GAEX,IAMMyB,EAAiBC,YAAU,CAACC,KAAM,aAAjBD,CAA+BZ,GAEtD,OAAGd,EAAM4B,OACE,kBAAC,IAAD,CAAUC,GAAG,aAIpB,oCACI,wKACA,kBAACJ,EAAD,CAAgBT,SAfP,SAACc,GACd,IAAIC,EAAWD,EAASC,SACpBC,EAAQF,EAASG,MACjBC,EAAaJ,EAASI,WAC1BlC,EAAMiC,MAAMD,EAAMD,EAASG,Q,gBCR7BC,E,iLAEE,OAAO,kBAAC,EAAD,CAAOF,MAAOG,KAAKpC,MAAMiC,MAAOL,OAAQQ,KAAKpC,MAAM4B,a,GAFrCS,IAAMC,WAYpBC,uBANO,SAACC,GACnB,MAAO,CACHZ,OAASY,EAAMC,KAAKb,UAIW,CAACK,WAAzBM,CAAiCJ","file":"static/js/7.6c29762f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"validation_formControl__1i13-\",\"error\":\"validation_error__SlIOK\",\"formError\":\"validation_formError__18rQx\"};","import React from 'react';\r\nimport styles from './validation.module.css'\r\n\r\nexport const elementCreator = Element => ({ input, meta, ...props }) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <Element  {...input} {...props} />\r\n            <div>\r\n                {hasError ? <span>{meta.error}</span> : ''}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const required = value =>  value || typeof value === 'number' ? undefined : 'Required';\r\nexport const maxLength = (max) => (value) => \r\n    value && value.length > max ? `Must be ${max} symbols or less` : undefined\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required } from '../../common/validation/validation';\r\nimport { elementCreator } from '../../common/validation/formControls';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styles from './../../common/validation/validation.module.css'\r\n\r\nconst Login = (props) => {\r\n   \r\n    const onSubmit = (formData) => {\r\n        let password = formData.password;\r\n        let email = formData.login;\r\n        let rememberMe = formData.rememberMe;\r\n        props.login(email,password,rememberMe)\r\n    }\r\n    const ReduxLoginForm = reduxForm({form: 'loginForm'})(LoginForm)\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Введите ваш логин и пароль</h1>\r\n            <ReduxLoginForm onSubmit={onSubmit} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst Input = elementCreator('input');\r\nconst LoginForm = (props) => {\r\n    \r\n    return (\r\n        <>  \r\n            {props.error && <div className={styles.formError}> {props.error} </div>}\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field placeholder={'Your login'} name={'login'} component={Input} validate={[required]} /><br />\r\n                <Field type='password' placeholder={'Your password'} name={'password'} component={Input} validate={[required]} /><br />\r\n                <Field type={'checkbox'} name={'rememberMe'} component={'input'} />Remember me<br />\r\n                <button>Login</button>\r\n            </form>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react'\r\nimport Login from './Login';\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../../redux/authReducer';\r\n\r\nclass LoginContainer extends React.Component {\r\n    render() {\r\n        return <Login login={this.props.login} isAuth={this.props.isAuth}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth : state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{login})(LoginContainer);"],"sourceRoot":""}